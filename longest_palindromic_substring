//Q3. Longest Palindromic Substring
//Find the longest substring of s that is a palindrome.


#include <iostream>
#include <string>
using namespace std;


int expandAroundCenter(string s, int left, int right) {
    while (left >= 0 && right < s.length() && s[left] == s[right]) {
        left--;
        right++;
    }
    return right - left - 1; 
}

int main() {
    string s;
    cout << "Enter string: ";
    cin >> s;

    if (s.empty()) {
        cout << "Empty string.\n";
        return 0;
    }

    int start = 0, maxLen = 1;

    for (int i = 0; i < s.length(); i++) {
        
        int len1 = expandAroundCenter(s, i, i);
        
        int len2 = expandAroundCenter(s, i, i + 1);

        int len = (len1 > len2) ? len1 : len2;

        if (len > maxLen) {
            maxLen = len;
            start = i - (len - 1) / 2;
        }
    }

    cout << "Longest Palindromic Substring: ";
    cout << s.substr(start, maxLen) << endl;

    return 0;
}
